import{_ as n,c as s,o as a,d as p}from"./app-DLBfEGWV.js";const e={},t=p(`<h1 id="开源一个日赚5毛的小程序【北漂开车指南】-欢迎star" tabindex="-1"><a class="header-anchor" href="#开源一个日赚5毛的小程序【北漂开车指南】-欢迎star"><span>开源一个日赚5毛的小程序【北漂开车指南】，欢迎star</span></a></h1><p>在<a href="https://juejin.cn/post/7393209265572773951" target="_blank" rel="noopener noreferrer">开源一个日赚5毛的小程序【北漂开车指南】，欢迎star</a> 中，有很多值得研究的算法，这里想分享一下。</p><p><a href="https://github.com/ygweric/jinjing-route-plan-mp-opensource" target="_blank" rel="noopener noreferrer">GitHub代码地址 jinjing-route-plan-mp-opensource</a></p><p>这个小程序的主要算法点是：<strong>判断摄像头点位是否在导航线路之上，也就是判断摄像头点位是否和线路重合</strong></p><h2 id="这里有几个前置情况需要说明下" tabindex="-1"><a class="header-anchor" href="#这里有几个前置情况需要说明下"><span>这里有几个前置情况需要说明下：</span></a></h2><ol><li>目前小程序的摄像头点位有5000+，每个摄像头对应一个二维的经纬度点位。数据结构如下</li></ol><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Location</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  longitude<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  latitude<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>导航线路，是通过调用高德接口返回的，返回的数据格式是n个二位的点，组成的折线（线段），如下图，原始数据并不是一个或者多个封闭的多边形。</li></ol><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/1335a8454e1f47a08a785899644ae422~tplv-73owjymdk6-jj-mark:0:0:0:0:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzEzNDA3OTk5MDUwNzI4MCJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1722424654&amp;x-orig-sign=3xoc0rRO8SHQZRFCsLSPxuvTMO0%3D" alt="image.png"></p><ol start="3"><li>高德的原始数据如下<code>&quot;tmc_polyline&quot;: &quot;116.408477,40.06518;116.408525,40.0651;116.408627,40.065041;116.408718,40.065041;116.408799,40.065078&quot;</code></li></ol><p>实际使用中，我将其映射为简单的经纬度数组，可以理解为 <code>Array&lt;Location&gt;</code>,如下：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408477</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.06518</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408525</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.0651</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408627</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065041</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408718</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065041</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408799</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065078</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.408799</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065078</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.409287</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.064719</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.409287</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.064719</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.409314</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065207</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">{</span><span class="token property">&quot;longitude&quot;</span><span class="token operator">:</span><span class="token number">116.409314</span><span class="token punctuation">,</span><span class="token property">&quot;latitude&quot;</span><span class="token operator">:</span><span class="token number">40.065207</span><span class="token punctuation">}</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>高德提供线路避让的接口，避让参数需要是多边形，不可以是二维点， <a href="https://lbs.amap.com/api/webservice/guide/api/newroute#s1" target="_blank" rel="noopener noreferrer">文档在这里</a>, 参数字段是<strong>avoidpolygons</strong></li></ol><p>所以，我们要</p><ol><li>判断并标记出摄像头（<strong>二维点位</strong>），是否与导航的线路（<strong>二维点位数组（无宽度折线）</strong>）有重合。</li><li>将重合的点位转换为面，传给高德api。</li></ol><p>我们先尝试解决第一个问题：</p><h1 id="判断并标记出摄像头是否与导航的线路有重合" tabindex="-1"><a class="header-anchor" href="#判断并标记出摄像头是否与导航的线路有重合"><span>判断并标记出摄像头是否与导航的线路有重合</span></a></h1><p>当然，只判断点位和曲线是否重合，和简单，这里不描述，可以直接问大模型。</p><p>在<strong>实际业务中</strong>， 摄像头位置会有误差（网友上报提供），导航的无宽度折现，也无法覆盖实际宽两三米的道路，所以，我们需要（方案二选一）</p><ol><li><strong>将摄像头扩展为一个具有面积的正方形</strong>，正方形的宽度可以配置，在进行点位重合测试的时候选择合适的精度。当然，也可以扩展成圆、菱形、五角星、三角形、可以自由探索~。</li><li><strong>将线路的“无宽度折线”，扩展为有宽度的折线</strong>，这个比较复杂，也走了弯路，一会细说。</li></ol><p>我当时选择了第二种，估计当时脑子没有反应过来，直接忘记了第一种~</p><h2 id="将线路的-无宽度折线-扩展为有宽度的折线" tabindex="-1"><a class="header-anchor" href="#将线路的-无宽度折线-扩展为有宽度的折线"><span>将线路的“无宽度折线”，扩展为有宽度的折线</span></a></h2><h3 id="方案1-有问题" tabindex="-1"><a class="header-anchor" href="#方案1-有问题"><span>方案1， 有问题</span></a></h3><p>当时我想着直接将经纬度都加减10，得到一个误差，初期结果如下，效果看着不错。 <img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/4dadef02aef14fe1981555406fbdc651~tplv-73owjymdk6-jj-mark:0:0:0:0:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzEzNDA3OTk5MDUwNzI4MCJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1722426125&amp;x-orig-sign=KkXp3xnsryF4EEofZhj4JVUM7YE%3D" alt="image.png"></p><p>但测试多了，就发现有问题，在垂直、水平的路线中，显示良好，但在45度倾斜的情况下，回显示，如图：</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/9abd0f760f8e42788d62c1da63c37706~tplv-73owjymdk6-jj-mark:0:0:0:0:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzEzNDA3OTk5MDUwNzI4MCJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1722426230&amp;x-orig-sign=70PRyuLFSHWayxGVV8iB277wps8%3D" alt="image.png"><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/6c8e4e754a844f5784fbb9430aed2d84~tplv-73owjymdk6-jj-mark:0:0:0:0:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiMzEzNDA3OTk5MDUwNzI4MCJ9&amp;rk3s=e9ecf3d6&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1722426212&amp;x-orig-sign=8dqTl33CZ6gXvO9HvxO0Nwf%2B8xU%3D" alt="image.png"></p><p>v1代码可以在 <a href="https://github.com/ygweric/jinjing-route-plan-mp-opensource/tree/expandLineV1" target="_blank" rel="noopener noreferrer">https://github.com/ygweric/jinjing-route-plan-mp-opensource/tree/expandLineV1</a> 的<strong>expandLineV1</strong>分支的<strong>src\\pages\\route\\index.vue</strong>文件中查看</p><h3 id="方案2-用起来效果不错-目前线上版本的方案" tabindex="-1"><a class="header-anchor" href="#方案2-用起来效果不错-目前线上版本的方案"><span>方案2，用起来效果不错（目前线上版本的方案）</span></a></h3><p>好了，接着我们来解决第二个问题：</p><h1 id="将重合的点位转换为面-传给高德api" tabindex="-1"><a class="header-anchor" href="#将重合的点位转换为面-传给高德api"><span>将重合的点位转换为面，传给高德api</span></a></h1><h2 id="将摄像头扩展为一个具有面积的正方形" tabindex="-1"><a class="header-anchor" href="#将摄像头扩展为一个具有面积的正方形"><span>将摄像头扩展为一个具有面积的正方形</span></a></h2><p>这个很简单，直接将以点位为中心，分别计算出左上、右上、右下、左下四个点位的坐标，得到一个正方形。代码如下：</p>`,32),o=[t];function l(r,i){return a(),s("div",null,o)}const u=n(e,[["render",l],["__file","开源一个日赚5毛的小程序【北漂开车指南】，欢迎star.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%BC%80%E6%BA%90%E4%B8%80%E4%B8%AA%E6%97%A5%E8%B5%9A5%E6%AF%9B%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%90%E5%8C%97%E6%BC%82%E5%BC%80%E8%BD%A6%E6%8C%87%E5%8D%97%E3%80%91%EF%BC%8C%E6%AC%A2%E8%BF%8Estar.html","title":"开源一个日赚5毛的小程序【北漂开车指南】，欢迎star","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"这里有几个前置情况需要说明下：","slug":"这里有几个前置情况需要说明下","link":"#这里有几个前置情况需要说明下","children":[]},{"level":2,"title":"将线路的“无宽度折线”，扩展为有宽度的折线","slug":"将线路的-无宽度折线-扩展为有宽度的折线","link":"#将线路的-无宽度折线-扩展为有宽度的折线","children":[{"level":3,"title":"方案1， 有问题","slug":"方案1-有问题","link":"#方案1-有问题","children":[]},{"level":3,"title":"方案2，用起来效果不错（目前线上版本的方案）","slug":"方案2-用起来效果不错-目前线上版本的方案","link":"#方案2-用起来效果不错-目前线上版本的方案","children":[]}]},{"level":2,"title":"将摄像头扩展为一个具有面积的正方形","slug":"将摄像头扩展为一个具有面积的正方形","link":"#将摄像头扩展为一个具有面积的正方形","children":[]}],"git":{"updatedTime":1722421124000,"contributors":[{"name":"yanggw","email":"yanggw@glodon.com","commits":1}]},"filePathRelative":"posts/开源一个日赚5毛的小程序【北漂开车指南】，欢迎star.md","excerpt":"\\n<p>在<a href=\\"https://juejin.cn/post/7393209265572773951\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">开源一个日赚5毛的小程序【北漂开车指南】，欢迎star</a> 中，有很多值得研究的算法，这里想分享一下。</p>\\n<p><a href=\\"https://github.com/ygweric/jinjing-route-plan-mp-opensource\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitHub代码地址 jinjing-route-plan-mp-opensource</a></p>"}');export{u as comp,d as data};
